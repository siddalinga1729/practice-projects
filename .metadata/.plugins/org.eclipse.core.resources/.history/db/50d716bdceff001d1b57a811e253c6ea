package com.demoswagger.controller;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.demoswagger.entity.Book;
import com.demoswagger.service.BookServiceImpl;
import com.google.common.io.Resources;

import io.github.classgraph.Resource;

@RestController
public class BookController {
	@Autowired
	private BookServiceImpl bookServiceImpl;

	@PostMapping("/addBook")
	public String addNewBook(@RequestBody Book book) {
		bookServiceImpl.saveBook(book);
	   
		return "added successfully";
	}@PostMapping("/dummy")
	public String dummy(@RequestBody List<Book> books)  {
	   for(Book book:books) {
		   System.out.println(book);
	   }
		return "added successfully";
	}
	
	@GetMapping("/get-all")
	public List<Book> getAllBooks() {
		return bookServiceImpl.getAllBook();
	}
	@PatchMapping("/update")
	public String updateBooks(@RequestBody Map<String,Object> userInputs,@RequestParam Long id) {
		bookServiceImpl.updateBooks(userInputs,id);
		return "done";
	}
	@GetMapping("/download/{path}")
	public ResponseEntity<ClassPathResource> getFile(@PathVariable String path, HttpServletResponse response) throws IOException {
	//	String path="test.csv";
		ClassPathResource classPathResource = new ClassPathResource(path);
		response.setHeader("Content-Disposition", "attachment; filename=\"" + path + "\"");

//	    IOUtils.copy(classPathResource.getInputStream(), response.getOutputStream());
//	    response.flushBuffer();
//
//	    classPathResource.getInputStream().close();
return new ResponseEntity<Resource>(HttpStatus.OK).ok().contentType(MediaType.APPLICATION_OCTET_STREAM).body(classPathResource);
	}
}
